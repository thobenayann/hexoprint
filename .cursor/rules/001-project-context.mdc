---
description: 
globs: *.tsx,*.ts,*.md
alwaysApply: false
---
# Contexte du projet Hexoprint.fr – Next.js 15 & Sanity

## 1. Présentation générale

Hexoprint.fr est un site vitrine dédié à la prestation d’impression 3D pour professionnels et particuliers, piloté par un auto-entrepreneur situé en Haute-Garonne du nom de Yann RAVARY.
Le nom exacte de l'entreprise est `Hexo'print`.
Le projet vise à présenter l’activité, publier des contenus (blog/galerie), capter des prospects via des formulaires, et améliorer la visibilité locale (SEO).

## 2. Objectifs fonctionnels

- Présenter clairement les services d’impression 3D
- Mettre en avant des réalisations via une galerie administrable
- Publier des articles de blog sur le secteur, la technique, les cas clients
- Capter des leads grâce à un formulaire de demande de devis avancé (avec possibilité de joindre un fichier STL/OBJ)
- Préparer le terrain pour un estimateur de coût automatisé (fonctionnalité exploratoire)
- Optimiser le SEO local (cible principale : Haute-Garonne/Seysses, mais ouvert à la France entière)

## 3. Publics ciblés

- Professionnels (industrie, réparation de pièces, prototypes)
- Particuliers (modélisme, déco, projets sur-mesure, bricoleurs, curieux)

## 4. Charte graphique

- Blanc : #FAFAFA
- Gris : #E9E9E9
- Bleu clair : #96CFE7
- Bleu foncé : #24556A
- Noir : #293039

## 5. Stack technique

- **Next.js 15** (App Router, `/src/app`)
- **TypeScript**
- **Tailwind CSS v4**
- **Sanity** (headless CMS, studio embarqué dans le projet Next.js)
- **Framer Motion** pour les animations simples
- **Hébergement sur Vercel**
- **Gestion des contenus** : Sanity pour blog, galerie, et potentiellement gestion de données liées à la vente.

## 6. Structure du projet (à la date du 03/06/2025)

```plaintext
hexoprint-nextjs15-with-sanity/
├── node_modules/
├── public/
├── src/
│   ├── app/
│   │   ├── studio/           # Studio Sanity intégré (embarquable via route /studio)
│   │   ├── page.tsx
│   │   ├── favicon.ico
│   │   ├── globals.css
│   │   ├── layout.tsx
│   │   └── ...
│   └── sanity/
│       ├── lib/
│       │   ├── client.ts
│       │   ├── image.ts
│       │   └── live.ts
│       └── schemaTypes/
│           ├── index.ts
│           ├── env.ts
│           └── structure.ts
├── .env.local
├── eslint.config.mjs
├── next.config.ts
├── package.json
├── pnpm-lock.yaml
├── postcss.config.mjs
├── README.md
├── sanity.cli.ts
├── sanity.config.ts
└── tsconfig.json
```

### Détails :

- src/app/studio/ : Sanity Studio, intégré via la route /studio de Next.js.
- src/sanity/lib/ : Fonctions utilitaires pour accéder aux données Sanity (client, images, live preview).
- src/sanity/schemaTypes/ : Définition des schémas Sanity (articles, produits, etc.).
- sanity.config.ts, sanity.cli.ts : Fichiers de configuration du studio.

## 7. Organisation des contenus Sanity

Collections principales :
- article (blog)
- product (galerie de réalisations)
- (Évolutif) données liées à la vente ou à l’estimateur

*Administration des contenus directement dans Sanity Studio (access via /studio).*

## 8. Listes des datasets pour Sanity studio

- Pour le dévelopement : dev
- Pour la production : production

## 9. SEO

- Préférence pour une architecture multipage pour optimiser le référencement local/national.

## 10. Déploiement

- L’ensemble du projet (front + studio) sera déployé sur Vercel (configuration à affiner si besoin)

## 11. Notes pour l'IA ou tout contributeur du projet

- Respecter la structure fournie et la charte graphique
- Les composants, hooks, ou utilitaires doivent être pensés réutilisables et évolutifs (ajout de collections ou fonctionnalités)
- L’expérience dev doit rester simple (pas de surcouche monorepo inutile, privilégier l’approche “tout dans src/”)
- Tout doit être optimisé pour la performance, l’accessibilité et le SEO.